---
title: Bundestagswahl 2025
date: 2025-02-25
description: "Germany's 2025 federal parliamentary election results."
image: btw2025.png
twitter-card:
  image: "btw2025.png"
open-graph:
  image: "btw2025.png"
categories:
  - Germany
  - elections
---

Data and visualisation of the 2025 federal parliamentary election results in Germany. Shapefile and election results from Bundeswahlleiterin: <https://www.bundeswahlleiterin.de/bundestagswahlen/2025/ergebnisse/opendata/btw25/daten/>

```{r data-setup, message=FALSE, warning=FALSE}
library(tidyverse)
library(tidygeocoder)
library(ggplot2)
library(sf)
library(rnaturalearth)
library(mapview)
library(dplyr)
library(spatstat)
library(leafpop)
library(readxl)

DE25<-st_read("btw25_geometrie_wahlkreise_vg250_shp_geo/btw25_geometrie_wahlkreise_vg250_shp_geo.shp")

kerg <- read_delim("kerg2_00285.csv", delim = ";", 
                   escape_double = FALSE, trim_ws = TRUE, skip = 9)

kerg$Gebietsnummer <- as.numeric(kerg$Gebietsnummer)

kerg$Prozent        <- gsub(",", ".", kerg$Prozent)
kerg$VorpProzent    <- gsub(",", ".", kerg$VorpProzent)
kerg$DiffProzent    <- gsub(",", ".", kerg$DiffProzent)
kerg$DiffProzentPkt <- gsub(",", ".", kerg$DiffProzentPkt)

kerg$Prozent        <- as.numeric(kerg$Prozent)
kerg$VorpProzent    <- as.numeric(kerg$VorpProzent)
kerg$DiffProzent    <- as.numeric(kerg$DiffProzent)
kerg$DiffProzentPkt <- as.numeric(kerg$DiffProzentPkt)

```


@fig-results-bar shows the results of the five principal parties entering the Bundestag (i.e., excluding SSW).

```{r results-bar, echo=FALSE, message=FALSE, warning=FALSE, fig.cap="Electoral results of the largest parties.", fig.width=8.5}
#| label: fig-results-bar

## Zweitstimme votes
zs<-kerg %>% dplyr::filter(Stimme==2 & Gebietsart=="Bund" & Gruppenname=="SPD" | 
                           Stimme==2 & Gebietsart=="Bund" & Gruppenname=="CDU" |
                           Stimme==2 & Gebietsart=="Bund" & Gruppenname=="CSU" |
                           Stimme==2 & Gebietsart=="Bund" & Gruppenname=="FDP" |
                           Stimme==2 & Gebietsart=="Bund" & Gruppenname=="AfD" |
                         Stimme==2 & Gebietsart=="Bund" & Gruppenname=="GRÜNE" |
                         Stimme==2 & Gebietsart=="Bund" & Gruppenname=="Die Linke"
                         )

## create new joint CDU/CSU total
anz <- zs %>% dplyr::filter(Gruppenname=="CDU" | Gruppenname=="CSU") %>% summarise(TOT=sum(Anzahl))
pro <- zs %>% dplyr::filter(Gruppenname=="CDU" | Gruppenname=="CSU") %>% summarise(PRO=sum(Prozent))
Vanz <- zs %>% dplyr::filter(Gruppenname=="CDU" | Gruppenname=="CSU") %>% summarise(vTOT=sum(VorpAnzahl))
Vpro <- zs %>% dplyr::filter(Gruppenname=="CDU" | Gruppenname=="CSU") %>% summarise(vPRO=sum(VorpProzent))
diffPkt <- zs %>% dplyr::filter(Gruppenname=="CDU" | Gruppenname=="CSU") %>% summarise(vdiffPkt=sum(DiffProzentPkt))

zs <- add_row(zs, Wahlart = "BT", Wahltag = "23.02.2025", Gebietsart = "Bund", 
              Gebietsnummer=99, Gebietsname="Bundesgebiet", Gruppenart="Partei",
              Gruppenname="CDU/CSU", Stimme = 2,
              Anzahl=anz$TOT,
              Prozent=pro$PRO,
              VorpAnzahl=Vanz$vTOT,
              VorpProzent=Vpro$vPRO,
              DiffProzentPkt=diffPkt$vdiffPkt
              )

## keep CDU/CSU
zs1<-zs %>% dplyr::filter(Gruppenname=="SPD" | 
                          Gruppenname=="CDU/CSU" |
                          Gruppenname=="FDP" |
                          Gruppenname=="AfD" |
                          Gruppenname=="GRÜNE" |
                          Gruppenname=="Die Linke"
                          )

ggplot(zs1, aes(x=Gruppenname, y=Prozent, fill=Gruppenname))+
  geom_bar(colour="black", linewidth=0.4,stat = "identity")+
  geom_text(aes(y=(Prozent-2), label=round(Prozent, 1)), color="black", size=7)+
  geom_text(data=zs1 %>% filter(Gruppenname=="CDU/CSU"),
            aes(y=(Prozent-2), label=round(Prozent, 2)), color="grey", size=7)+
  scale_fill_manual(values = c("AfD"="brown", # "#009EE0"
                               "CDU/CSU"="black",
                               "FDP"="#FFED00", # "gold",
                               "GRÜNE"="#64A12D",
                               "Die Linke"="#BE3075",
                               "SPD"="#EB001F")) +
  theme_minimal()+xlab("")+
  scale_y_continuous("Percent", breaks=seq(0,30,5), minor_breaks=seq(0,30,1), limits=c(0,30))+
  theme(axis.text.x = element_text(angle = 45, vjust = 1.0, hjust=1, size=12),
        axis.text.y = element_text(size = 12),
        axis.title.y = element_text(size = 12),
        legend.position = "none")

```


```{r change-bar, message=FALSE, warning=FALSE, fig.cap="Change in electoral results from 2021 results.", fig.width=8.5}
#| label: fig-change-bar

ggplot(zs1, aes(x=Gruppenname, y=DiffProzentPkt)) +
  geom_bar(stat="identity", colour="black", aes(fill=Gruppenname), legend=FALSE)+ 
  scale_fill_manual(values = c("AfD"="brown", # "#009EE0"
                               "CDU/CSU"="black",
                               "FDP"="#FFED00", # "gold",
                               "GRÜNE"="#64A12D",
                               "Die Linke"="#BE3075",
                               "SPD"="#EB001F")) +
  theme_void()+xlab("")+
  geom_text(aes(label = paste(round(DiffProzentPkt, 1), "%"),
                vjust = ifelse(DiffProzentPkt >= 0, 1.5, -0.5)), size=7)+
  geom_text(data=zs1 %>% filter(Gruppenname=="CDU/CSU"),
            aes(label = paste(round(DiffProzentPkt, 1), "%"),
                vjust = ifelse(DiffProzentPkt >= 0, 1.5, -0.5)), 
            color="grey", size=7)+
  theme(axis.text.x = element_text(angle = 45, vjust = 0.9, hjust=1, size=12),
        legend.position = "none")
```

@fig-panel-maps shows the areas of electoral strength for the parliamentary parties as well as the generally high election participation.

```{r panel-maps, echo=FALSE, message=FALSE, warning=FALSE, fig.cap="Maps of electoral performance of the five main parties entering the Bundestag.", fig.height=16}
#| label: fig-panel-maps

## SPD - Zweitstimme
kerg_SPD2 <- kerg %>% dplyr::filter(Stimme == 2 & 
                                      Gebietsart == "Wahlkreis" &
                                      Gruppenname == "SPD")

wkr_SPD2 <- DE25 %>% left_join(kerg_SPD2, by = c("WKR_NR" = "Gebietsnummer"))

map_SPD2 <- ggplot(wkr_SPD2) +
  geom_sf(aes(fill = Prozent))+
  # geom_sf_text(aes(label = scales::percent(PROP)))+
  scale_fill_gradient("SPD %", low = "white", high = "#EB001F")+
  guides(fill = guide_colourbar(position = "bottom")) +
  theme_void()

## AfD - Zweitstimme
kerg_AfD2 <- kerg %>% dplyr::filter(Stimme == 2 & 
                                      Gebietsart == "Wahlkreis" &
                                      Gruppenname == "AfD")

wkr_AfD2 <- DE25 %>% left_join(kerg_AfD2, by = c("WKR_NR" = "Gebietsnummer"))

map_AfD2 <- ggplot(wkr_AfD2) +
  geom_sf(aes(fill = Prozent))+
  # geom_sf_text(aes(label = scales::percent(PROP)))+
  scale_fill_gradient("AfD %", low = "white", high = "brown")+ # "#009EE0"
  guides(fill = guide_colourbar(position = "bottom")) +
  theme_void()

## GRÜNE - Zweitstimme
kerg_GRÜNE2 <- kerg %>% dplyr::filter(Stimme == 2 & 
                                      Gebietsart == "Wahlkreis" &
                                      Gruppenname == "GRÜNE")

wkr_GRÜNE2 <- DE25 %>% left_join(kerg_GRÜNE2, by = c("WKR_NR" = "Gebietsnummer"))

map_GRÜNE2 <- ggplot(wkr_GRÜNE2) +
  geom_sf(aes(fill = Prozent))+
  # geom_sf_text(aes(label = scales::percent(PROP)))+
  scale_fill_gradient("GRÜNE %", low = "white", high = "#64A12D")+
  guides(fill = guide_colourbar(position = "bottom")) +
  theme_void()

## CDU/CSU - Zweitstimme
kerg_CDU_CSU2 <- kerg %>% dplyr::filter(Stimme == 2 & 
                                      Gebietsart == "Wahlkreis" &
                                      Gruppenname == "CDU" | 
                                      Stimme == 2 & 
                                      Gebietsart == "Wahlkreis" &
                                      Gruppenname == "CSU" )

wkr_CDU_CSU2 <- DE25 %>% left_join(kerg_CDU_CSU2, by = c("WKR_NR" = "Gebietsnummer"))

map_CDU_CSU2 <- ggplot(wkr_CDU_CSU2) +
  geom_sf(aes(fill = Prozent))+
  # geom_sf_text(aes(label = scales::percent(PROP)))+
  scale_fill_gradient("CDU/CSU %", low = "white", high = "black")+
  guides(fill = guide_colourbar(position = "bottom")) +
  theme_void()

## Die Linke - Zweitstimme
kerg_Die_Linke2 <- kerg %>% dplyr::filter(Stimme == 2 & 
                                      Gebietsart == "Wahlkreis" &
                                      Gruppenname == "Die Linke")

wkr_Die_Linke2 <- DE25 %>% left_join(kerg_Die_Linke2, by = c("WKR_NR" = "Gebietsnummer"))

map_Die_Linke2 <- ggplot(wkr_Die_Linke2) +
  geom_sf(aes(fill = Prozent))+
  # geom_sf_text(aes(label = scales::percent(PROP)))+
  scale_fill_gradient("Die Linke %", low = "white", high = "#BE3075")+
  guides(fill = guide_colourbar(position = "bottom")) +
  # guides(fill = guide_legend(position = "bottom")) +
  theme_void()

# alpha("red",0.2)

## PARTICIPATION
kerg_part <- kerg %>% dplyr::filter(Gebietsart == "Wahlkreis" &
                                      Gruppenname == "Wählende")

wkr_part <- DE25 %>% left_join(kerg_part, by = c("WKR_NR" = "Gebietsnummer"))

map_part <- ggplot(wkr_part) +
  geom_sf(aes(fill = Prozent))+
  # geom_sf_text(aes(label = scales::percent(PROP)))+
  scale_fill_gradient("Participation %", low = "white", high = "purple")+
  guides(fill = guide_colourbar(position = "bottom")) +
  theme_void()

library(cowplot)
maps_btw2025 <- plot_grid(map_CDU_CSU2, map_AfD2, map_SPD2,
                          map_GRÜNE2, map_Die_Linke2, map_part,
                          nrow = 3, align = "h")+ # , labels = c('A', 'B')
  theme(plot.background=element_rect(color = "black"))

maps_btw2025

# png(file=paste0("maps_btw2025", as.character(Sys.Date()), ".png"), width = 300, height = 270, units = 'mm', res = 300)
# plot(maps_btw2025)
# dev.off()
```

@fig-parl-seatsA shows the distribution of seats in the Bundestag following the election.

```{r parl-seatsA, message=FALSE, warning=FALSE, fig.cap="Bundestag seat distribution.", fig.width=8.5}
#| label: fig-parl-seatsA

# https://stackoverflow.com/questions/42729174/creating-a-half-donut-or-parliamentary-seating-chart

library(ggforce)

parlDiag <- function(Parties, shares, cols = NULL, repr=c("absolute", "proportion")) {
  repr = match.arg(repr)
  stopifnot(length(Parties) == length(shares))
  if (repr == "proportion") {
    stopifnot(sum(shares) == 1)
  }
  if (!is.null(cols)) {
    names(cols) <- Parties
  }

  # arc start/end in rads, last one reset bc rounding errors
  cc <- cumsum(c(-pi/2, switch(repr, "absolute" = (shares / sum(shares)) * pi, "proportion" = shares * pi)))
  cc[length(cc)] <- pi/2

  # get angle of arc midpoints
  meanAngles <- colMeans(rbind(cc[2:length(cc)], cc[1:length(cc)-1]))

  # unit circle
  labelX <- sin(meanAngles)
  labelY <- cos(meanAngles)

  # prevent bounding box < y=0
  labelY <- ifelse(labelY < 0.015, 0.015, labelY)

  p <- ggplot() + theme_no_axes() + coord_fixed() +
    expand_limits(x = c(-1.3, 1.3), y = c(0, 1.3)) + 
    theme(panel.border = element_blank()) +
    theme(legend.position = "none") +

    geom_arc_bar(aes(x0 = 0, y0 = 0, r0 = 0.5, r = 1,
                     start = cc[1:length(shares)], 
                     end = c(cc[2:length(shares)], pi/2), fill = Parties)) +

    switch(is.null(cols)+1, scale_fill_manual(values = cols), NULL) + 

    # for label and line positions, just scale sin & cos to get in and out of arc
    geom_path(aes(x = c(0.9 * labelX, 1.15 * labelX), y = c(0.9 * labelY, 1.15 * labelY),
                  group = rep(1:length(shares), 2)), colour = "white", size = 2) +
    geom_path(aes(x = c(0.9 * labelX, 1.15 * labelX), y = c(0.9 * labelY, 1.15 * labelY),
                  group = rep(1:length(shares), 2)), size = 1) +

    geom_label(aes(x = 1.15 * labelX, y = 1.15 * labelY, 
                   label = switch(repr,
                                  "absolute" = sprintf("%s\n%i", Parties, shares),
                                  "proportion" = sprintf("%s\n%i%%", Parties, round(shares*100)))), fontface = "bold", 
               label.padding = unit(1, "points")) +

    geom_point(aes(x = 0.9 * labelX, y = 0.9 * labelY), colour = "white", size = 2) +
    geom_point(aes(x = 0.9 * labelX, y = 0.9 * labelY)) +
    geom_text(aes(x = 0, y = 0, label = switch(repr, 
                                               "absolute" = (sprintf("Total: %i MPs", sum(shares))), 
                                               "proportion" = "")),
              fontface = "bold", size = 7) 

  return(p)
}

bt <- data.frame(parties = c("AfD", "CDU/CSU", "SPD", "Grüne", "Linke", "SSW"),
                 seats   = c(152,   208,       120,   85,      64,      1),
                 cols    = c("brown","black", "red", "green", "hotpink", "navy"),
                 colour  = c("brown","#000000","#EB001F","#64A12D","#BE3075","navy"), # "#009EE0"
                 stringsAsFactors = FALSE)

parlDiag(bt$parties, bt$seats, cols = bt$colour)

```

@fig-parl-seatsB shows the distribution of seats in the Bundestag following the election.

```{r parl-seatsB, message=FALSE, warning=FALSE, fig.cap="Bundestag seat distribution.", fig.height=4}
#| label: fig-parl-seatsB

# <https://stackoverflow.com/questions/28917150/parliamentary-seats-graph-colors-and-labels>

seats <- function(N,M, r0=2.5){ 
 radii <- seq(r0, 1, len=M)

 counts <- numeric(M)
 pts = do.call(rbind,
            lapply(1:M, function(i){
              counts[i] <<- round(N*radii[i]/sum(radii[i:M]))
              theta <- seq(0, pi, len = counts[i])
              N <<- N - counts[i]
              data.frame(x=radii[i]*cos(theta), y=radii[i]*sin(theta), r=i,
                         theta=theta)
            }  )
  )
   pts = pts[order(-pts$theta,-pts$r),]
   pts
 }


election <- function(seats, counts){
stopifnot(sum(counts)==nrow(seats))
seats$party = rep(1:length(counts),counts)
seats
}

layout = seats(630,16)
result = election(layout, bt$seats) 

# plot(result$x, result$y, 
#     col=c("brown","black", "red", "green", "hotpink", "navy")[result$party], #numeric index
#     pch=19, asp=1, 
#      frame.plot=FALSE, # gets rid of the surrounding rectangle
#     axes="F")   # gets rid of the numbers and ticks

## ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

## https://github.com/zmeers/ggparliament
library(ggparliament)

bt <- data.frame(parties = c("AfD", "CDU/CSU", "SPD", "Grüne", "Linke", "SSW"),
                 seats   = c(152,   208,       120,   85,      64,      1),
                 cols    = c("brown","black", "red", "green", "hotpink", "navy"),
                 colour  = c("#009EE0","#000000","#EB001F","#64A12D","#BE3075","navy"),
                 stringsAsFactors = FALSE)

germany <- parliament_data(election_data = bt, 
                           parl_rows = 10,
                           type = 'semicircle',
                           party_seats = bt$seats)

bundestag <- ggplot(germany, aes(x, y, colour = parties)) +
  geom_parliament_seats(size = 3) +
  labs(colour="Party") +  
  theme_ggparliament(legend = TRUE) +
  theme(legend.text=element_text(size=12),
        legend.title=element_blank(),
        legend.position = c(0.5, 0.25),
        # legend.position = "bottom",
        legend.background = element_rect(linetype = 1, linewidth = 0.5, colour = 1))+
  scale_colour_manual(values = germany$colour, 
                      limits = germany$parties) 

bundestag

```


@fig-interactive-map shows the Wahlkreise and, by clicking on them, results for the most prominent parties.

```{r interactive-map, message = FALSE, warning=FALSE, fig.cap="Map of Wahlkreise coloured by strongest party (Zweitstimmen)."}
#| label: fig-interactive-map

## Zweitstimme
kerg_2 <- kerg %>% dplyr::filter(Stimme == 2 & Gebietsart == "Wahlkreis")

kerg_2 <- kerg_2 %>% dplyr::filter(Gruppenname == "AfD"|
                                     Gruppenname == "CDU"|
                                     Gruppenname == "CSU"|
                                     Gruppenname == "FDP"|
                                     Gruppenname == "Die Linke"|
                                     Gruppenname == "GRÜNE"|
                                     Gruppenname == "BSW"|
                                     Gruppenname == "SPD")

kerg_2_wide <- kerg_2 %>% 
  select(Gebietsnummer, Gebietsname, Gruppenname, Prozent) %>% 
  pivot_wider(names_from = "Gruppenname", values_from = "Prozent")

kerg_2_wide$CDU[is.na(kerg_2_wide$CDU)] <- 0
kerg_2_wide$CSU[is.na(kerg_2_wide$CSU)] <- 0

kerg_2_wide <- kerg_2_wide %>% 
  mutate(Winner=case_when(
    SPD == pmax(SPD, CDU, GRÜNE, FDP, AfD, `Die Linke`, BSW, CSU) ~ "SPD",
    CDU == pmax(SPD, CDU, GRÜNE, FDP, AfD, `Die Linke`, BSW, CSU) ~ "CDU",
    CSU == pmax(SPD, CDU, GRÜNE, FDP, AfD, `Die Linke`, BSW, CSU) ~ "CSU",
    GRÜNE==pmax(SPD, CDU, GRÜNE, FDP, AfD, `Die Linke`, BSW, CSU) ~ "GRÜNE",
    FDP == pmax(SPD, CDU, GRÜNE, FDP, AfD, `Die Linke`, BSW, CSU) ~ "FDP",
    AfD == pmax(SPD, CDU, GRÜNE, FDP, AfD, `Die Linke`, BSW, CSU) ~ "AfD",
    BSW == pmax(SPD, CDU, GRÜNE, FDP, AfD, `Die Linke`, BSW, CSU) ~ "BSW",
    `Die Linke`==pmax(SPD, CDU, GRÜNE, FDP, AfD, `Die Linke`, BSW, CSU) ~ "LINKE",
  ))

wkr_2 <- DE25 %>% left_join(kerg_2_wide, by = c("WKR_NR" = "Gebietsnummer"))

colours<-mapviewColors(
  x=wkr_2,
  zcol = "Winner",
  colors=c("brown","#000000","navy","#FFED00","#64A12D","#BE3075","#EB001F"),
  # "#009EE0"
  at=c("AfD","CDU","CSU","FDP","GRÜNE","LINKE","SPD")
  )

mapview(wkr_2, # alpha.regions = 0.2, aplha = 1,
        zcol = "Winner",col.regions = colours,
        label="Gebietsname", legend=F, layer.name='2025 BTW',
        map.types = c("CartoDB.Positron","CartoDB.DarkMatter"),
        popup = popupTable(kerg_2_wide,
                           zcol = c("Gebietsname", "Winner",
                                    "AfD","BSW","CDU","CSU","FDP",
                                    "GRÜNE","Die Linke","SPD")))

```



<!-- {{< video https://www.youtube.com/watch?v=EDxuMXb0joE >}} -->

<!-- > Wehrt euch, leistet Widerstand -->

<!-- > gegen den Faschismus hier im Land. -->

<!-- > Auf die Barrikaden, auf die Barrikaden! -->

You can download the data by clicking the button below.

```{r collapse = TRUE, comment = "#>", message = FALSE, warning=FALSE}

library(downloadthis)

kerg %>% download_this(
    output_name = "kerg2_00285",
    output_extension = ".csv",
    button_label = "Download dataset as csv",
    button_type = "warning",
    has_icon = TRUE,
    icon = "fa fa-save"
  )

DE25 %>% download_this(
    output_name = "DE25",
    output_extension = ".csv",
    button_label = "Download shapefile as csv",
    button_type = "warning",
    has_icon = TRUE,
    icon = "fa fa-save"
  )

```

<!-- ****** -->

<!-- <span style="font-family:Garamond; font-size:0.8em;">The basic data is taken from the monitoring by the <a href="https://taz.de/">TAZ newspaper</a>, which has kept a monitor of the recent demonstrations against the AfD, available at <a href="https://taz.de/demo">https://taz.de/demo</a>.</a></span> -->
